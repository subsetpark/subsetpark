@title tempo [![Build Status](https://secure.travis-ci.org/selectel/tempo.png)](http://travis-ci.org/selectel/tempo)
@author Dmitry Groshev <lambdadmitry@gmail.com>
@author Sergei Levedev <superbobry@gmail.com>

@doc
`tempo' is a library for parsing and formatting dates in
Erlang. It provides a clean and nice interface to libc's
[http://linux.die.net/man/3/strptime strptime] and
[http://linux.die.net/man/3/strftime strftime] functions,
which are unfortunately missing from Erlang's standard library.


== Is it any good? ==
Yes.


== How can I use it? ==

The only two functions you have to remember are {@link tempo:parse/2}
and {@link tempo:format/2}. Here are some examples:

```
1> {ok, Bin} = tempo:format(iso8601, {now, now()}).
{ok,<<"2013-01-05T13:29:18+0400">>}
2> tempo:parse(iso8601, {datetime, Bin}).
{ok,{{2013,1,5},{13,29,18}}}
'''

As you might have noticed, both of the functions follow a common
pattern -- *Format* first, then a *Value*, tagged by its actual
or expected type. Predefined formats include: `iso8601', `rfc1123',
and `rfc2822', but in fact, you can use any format, as long as it
follows libc conventions:

```
(tempo_dev@localhost)1> {ok, Bin} = tempo:format(<<"%A, %Y-%d-%m">>, {now, now()}).
{ok,<<"Thursday, 2012-07-06">>}
'''

== Limitations ==

Unfortunately, dealing with time on various platforms is messy, so limitations are
unavoidable. Here's a shortlist of those we know of:

* Parsing years before `1900' causes a `{error, format_mismatch}' on OS X.
